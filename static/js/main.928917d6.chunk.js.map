{"version":3,"sources":["app/redux/contactSlice.js","app/pages/Contact.js","App.js","features/counter/counterSlice.js","app/store.js","serviceWorker.js","index.js"],"names":["contactSlice","createSlice","name","initialState","contactList","reducers","addContact","state","action","payload","actions","Contact","props","isLoading","list","show","modalForm","isFormValid","contact","firstName","lastName","age","photo","editId","handleClose","bind","handleOpen","handleChange","deleteContact","editContact","this","setState","prevState","id","dataById","nameKey","myArray","i","length","search","photoUrl","console","log","event","value","target","e","validateForm","Axios","post","then","res","catch","err","preventDefault","put","delete","window","location","reload","get","data","className","Modal","onHide","keyboard","size","aria-labelledby","centered","Header","closeButton","Title","Body","Form","onSubmit","Row","Group","as","Col","md","Label","Control","type","placeholder","onChange","Text","muted","min","Button","variant","disabled","onClick","icon","faPlus","Table","borderless","hover","colSpan","faSpinner","spin","map","src","round","faPen","style","marginLeft","faTrash","Component","mapDispatchToProps","connect","About","Users","App","path","counterSlice","increment","decrement","incrementByAmount","configureStore","reducer","counter","counterReducer","contactReducer","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","StrictMode","store","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.928917d6.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const contactSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState: {\r\n    contactList: [],\r\n  },\r\n  reducers: {\r\n    addContact: (state, action) => {\r\n      state.contactList = action.payload;\r\n    },\r\n  },\r\n});\r\nexport const { addContact } = contactSlice.actions;\r\nexport default contactSlice.reducer;\r\n","import Axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { Button, Table, Modal, Form, Col } from \"react-bootstrap\";\r\n// import { Link } from \"react-router-dom\";\r\nimport Avatar from \"react-avatar\";\r\nimport { addContact } from \"../redux/contactSlice\";\r\nimport { connect } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPen,\r\n  faPlus,\r\n  faSpinner,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction search(nameKey, myArray) {\r\n  for (var i = 0; i < myArray.length; i++) {\r\n    if (myArray[i].id === nameKey) {\r\n      return myArray[i];\r\n    }\r\n  }\r\n}\r\n\r\nclass Contact extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: true,\r\n      list: [],\r\n      show: false,\r\n      modalForm: null,\r\n      isFormValid: false,\r\n      contact: {\r\n        firstName: null,\r\n        lastName: null,\r\n        age: null,\r\n        photo: \"\",\r\n      },\r\n      editId: null,\r\n    };\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleOpen = this.handleOpen.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.addContact = this.addContact.bind(this);\r\n    this.deleteContact = this.deleteContact.bind(this);\r\n    this.editContact = this.editContact.bind(this);\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState((prevState) => ({\r\n      contact: {\r\n        ...prevState.contact,\r\n        age: null,\r\n        firstName: null,\r\n        lastName: null,\r\n        photo: \"\",\r\n      },\r\n      editId: null,\r\n      show: false,\r\n      modalForm: null,\r\n    }));\r\n  }\r\n\r\n  handleOpen(action, id) {\r\n    id = id || null;\r\n    this.setState({ show: true });\r\n    if (action === \"create\") {\r\n      this.setState({ modalForm: \"create\" });\r\n    } else if (action === \"edit\") {\r\n      this.setState({ modalForm: \"edit\" });\r\n      let dataById = search(id, this.state.list);\r\n      let photoUrl = dataById.photo;\r\n      if (dataById.photo === \"N/A\") {\r\n        photoUrl = \"\";\r\n      }\r\n      this.setState((prevState) => ({\r\n        contact: {\r\n          ...prevState.contact,\r\n          age: dataById.age,\r\n          firstName: dataById.firstName,\r\n          lastName: dataById.lastName,\r\n          photo: photoUrl,\r\n        },\r\n        editId: id,\r\n      }));\r\n    } else {\r\n      console.log(\"Something Wrong\");\r\n    }\r\n  }\r\n\r\n  handleChange(event) {\r\n    const value = event.target.value;\r\n    const name = event.target.name;\r\n\r\n    this.setState((prevState) => ({\r\n      contact: { ...prevState.contact, [name]: value },\r\n    }));\r\n  }\r\n\r\n  validateForm() {\r\n    let contact = this.state.contact;\r\n    if (\r\n      contact.firstName == null ||\r\n      contact.firstName.length <= 3 ||\r\n      contact.lastName == null ||\r\n      contact.lastName.length <= 3 ||\r\n      contact.age == null ||\r\n      contact.age < 0\r\n    ) {\r\n      this.setState({ isFormValid: false });\r\n      return false;\r\n    } else {\r\n      this.setState({ isFormValid: true });\r\n      return true;\r\n    }\r\n  }\r\n\r\n  addContact(e) {\r\n    let contact = this.state.contact;\r\n    if (this.state.contact.photo === \"\") {\r\n      contact = {\r\n        firstName: this.state.contact.firstName,\r\n        lastName: this.state.contact.lastName,\r\n        age: this.state.contact.age,\r\n      };\r\n    }\r\n    console.log(this.validateForm());\r\n    if (this.validateForm()) {\r\n      Axios.post(\"https://simple-contact-crud.herokuapp.com/contact\", contact)\r\n        .then((res) => {\r\n          console.log(res);\r\n        })\r\n        .catch((err) => {\r\n          e.preventDefault();\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      e.preventDefault();\r\n      console.log(\"Something Wrong\");\r\n    }\r\n  }\r\n\r\n  editContact(e) {\r\n    let contact = this.state.contact;\r\n    if (this.state.contact.photo === \"\") {\r\n      contact = {\r\n        firstName: this.state.contact.firstName,\r\n        lastName: this.state.contact.lastName,\r\n        age: this.state.contact.age,\r\n      };\r\n    }\r\n    if (this.validateForm()) {\r\n      Axios.put(\r\n        `https://simple-contact-crud.herokuapp.com/contact/${this.state.editId}`,\r\n        contact\r\n      )\r\n        .then((res) => {\r\n          console.log(res);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          e.preventDefault();\r\n        });\r\n    } else {\r\n      e.preventDefault();\r\n      console.log(\"Something Wrong\");\r\n    }\r\n  }\r\n\r\n  deleteContact(id) {\r\n    Axios.delete(\r\n      `https://simple-contact-crud.herokuapp.com/contact/${id}`\r\n    ).then((res) => {\r\n      window.location.reload();\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.state.isLoading);\r\n    Axios.get(\"https://simple-contact-crud.herokuapp.com/contact\").then(\r\n      (res) => {\r\n        this.setState({\r\n          isLoading: false,\r\n          list: res.data.data,\r\n          show: false,\r\n        });\r\n        this.props.addContact(res.data.data);\r\n      }\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"mt-5\">\r\n        <h4>Contact List</h4>\r\n        <p>Save your contact for free</p>\r\n        <Modal\r\n          show={this.state.show}\r\n          onHide={this.handleClose}\r\n          keyboard={false}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>\r\n              {this.state.modalForm === \"create\" ? \"Add new \" : \"Update\"}{\" \"}\r\n              contact\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form\r\n              onSubmit={\r\n                this.state.modalForm === \"create\"\r\n                  ? this.addContact\r\n                  : this.editContact\r\n              }\r\n            >\r\n              <Form.Row>\r\n                <Form.Group as={Col} md=\"5\">\r\n                  <Form.Label>First name</Form.Label>\r\n                  <Form.Control\r\n                    value={this.state.contact.firstName}\r\n                    type=\"text\"\r\n                    name=\"firstName\"\r\n                    placeholder=\"Enter first name\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  <Form.Text id=\"passwordHelpBlock\" muted>\r\n                    Minimum 3 character\r\n                  </Form.Text>\r\n                </Form.Group>\r\n                <Form.Group as={Col} md=\"5\">\r\n                  <Form.Label>Last name</Form.Label>\r\n                  <Form.Control\r\n                    value={this.state.contact.lastName}\r\n                    onChange={this.handleChange}\r\n                    name=\"lastName\"\r\n                    type=\"text\"\r\n                    placeholder=\"Enter last name\"\r\n                  />\r\n                  <Form.Text id=\"passwordHelpBlock\" muted>\r\n                    Minimum 3 character\r\n                  </Form.Text>\r\n                </Form.Group>\r\n                <Form.Group as={Col} md=\"2\">\r\n                  <Form.Label>Age</Form.Label>\r\n                  <Form.Control\r\n                    value={this.state.contact.age}\r\n                    onChange={this.handleChange}\r\n                    name=\"age\"\r\n                    type=\"number\"\r\n                    placeholder=\"Age\"\r\n                    min={1}\r\n                  />\r\n                </Form.Group>\r\n              </Form.Row>\r\n              <Form.Group>\r\n                <Form.Label>Photo url (Optional)</Form.Label>\r\n                <Form.Control\r\n                  value={this.state.contact.photo}\r\n                  onChange={this.handleChange}\r\n                  name=\"photo\"\r\n                  type=\"text\"\r\n                  placeholder=\"Enter photo url\"\r\n                />\r\n              </Form.Group>\r\n              <Button\r\n                variant=\"light\"\r\n                type=\"submit\"\r\n                className=\"float-right save-color\"\r\n                disabled={this.state.isFormValid ? \"true\" : \"false\"}\r\n              >\r\n                {this.state.modalForm === \"create\" ? \"Save \" : \"Edit\"}\r\n              </Button>\r\n            </Form>\r\n          </Modal.Body>\r\n        </Modal>\r\n\r\n        <Button\r\n          variant=\"outline-primary\"\r\n          className=\"btn-add-contact\"\r\n          onClick={() => this.handleOpen(\"create\")}\r\n        >\r\n          <FontAwesomeIcon icon={faPlus} /> Add Contact\r\n        </Button>\r\n\r\n        <Table borderless hover>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th></th>\r\n              <th>Age</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.isLoading ? (\r\n              <tr>\r\n                <td colSpan={4}>\r\n                  <center>\r\n                    <FontAwesomeIcon icon={faSpinner} spin size=\"3x\" />\r\n                  </center>\r\n                </td>\r\n              </tr>\r\n            ) : (\r\n              this.state.list.map((e) => {\r\n                return (\r\n                  <tr key={e.id}>\r\n                    <td className=\"photo-td\">\r\n                      <Avatar\r\n                        size=\"35\"\r\n                        name={e.firstName}\r\n                        src={e.photo}\r\n                        round={true}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      {e.firstName} {e.lastName}\r\n                    </td>\r\n                    <td>{e.age}</td>\r\n                    <td>\r\n                      <Button\r\n                        variant=\"light\"\r\n                        className=\"btn-add-contact\"\r\n                        onClick={() => this.handleOpen(\"edit\", e.id)}\r\n                      >\r\n                        <FontAwesomeIcon icon={faPen} />\r\n                      </Button>\r\n                      <Button\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        onClick={() => this.deleteContact(e.id)}\r\n                        variant=\"light\"\r\n                        className=\"btn-add-contact\"\r\n                      >\r\n                        <FontAwesomeIcon icon={faTrash} />\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })\r\n            )}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contactList: state.contactList,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contact);\r\n","import React from \"react\";\r\n// import logo from \"./logo.svg\";\r\n// import { Counter } from \"./features/counter/Counter\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Contact from \"./app/pages/Contact\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"container\">\r\n        <Switch>\r\n          <Route path=\"/create-contact\">\r\n            <About />\r\n          </Route>\r\n          <Route path=\"/users\">\r\n            <Users />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Contact />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nfunction About() {\r\n  return <h2>About</h2>;\r\n}\r\n\r\nfunction Users() {\r\n  return <h2>Users</h2>;\r\n}\r\nexport default App;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = amount => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = state => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport counterReducer from \"../features/counter/counterSlice\";\r\nimport contactReducer from \"./redux/contactSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n    contact: contactReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./app/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}